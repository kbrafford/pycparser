#-----------------------------------------------------------------
# pycparser: func_prototypes.py
#
# Using pycparser for printing out all the functions prototyped in a
# C or H file.
#
# This is a simple example of traversing the AST generated by
# pycparser. Call it from the root directory of pycparser.
#
# Eli Bendersky [http://eli.thegreenplace.net]
# License: BSD
#-----------------------------------------------------------------
from __future__ import print_function
import sys

# This is not required if you've installed pycparser into
# your site-packages/ with setup.py
sys.path.extend(['.', '..'])

from pycparser import c_parser, c_ast, parse_file


# A simple visitor for FuncDecl nodes that prints the names and
# locations of function definitions.
class FuncDeclVisitor(c_ast.NodeVisitor):
    def __init__(self):
        self._funcs = []
        c_ast.NodeVisitor.__init__(self)
    def _get_funcs(self):
        return self._funcs
    def visit_FuncDecl(self, node):
        self._funcs.append(node)


def show_func_decls(filename):
    # Note that cpp is used. Provide a path to your own cpp or
    # make sure one exists in PATH.
    ast = parse_file(filename, use_cpp=True,
                     cpp_args=r'-Iutils/fake_libc_include')

    v = FuncDeclVisitor()
    v.visit(ast)
    return v._get_funcs()


if __name__ == "__main__":
    if len(sys.argv) > 1:
        filename  = sys.argv[1]
    else:
        filename = 'examples/c_files/memmgr.h'

    funcs = show_func_decls(filename)
